package edu.westga.cs6312.stock.controller;

import java.io.FileNotFoundException;
import java.util.Scanner;

import edu.westga.cs6312.stock.model.StockManager;
import edu.westga.cs6312.stock.view.StockGUI;
import edu.westga.cs6312.stock.view.StockTUI;

/**
 * Allows the user to select between the TUI and GUI versions of the
 * application.
 * 
 * @author Spencer Dent
 * @version 2021-05-03
 */
public class VersionChooser {
	private Scanner keyboardScanner;
	private StockManager stockManagerModel;

	/**
	 * Creates a new VersionChooser, instantiating its Scanner.
	 */
	public VersionChooser() {
		this.keyboardScanner = new Scanner(System.in);
	}

	/**
	 * Prompts the user to select a view version and calls the appropriate methods
	 * to create the selected view.
	 */
	public void chooseVersion() {
		while (this.stockManagerModel == null) {
			String fileName = this.getFileName();
			try {
				this.stockManagerModel = FileInteractor.readData(fileName);
			} catch (FileNotFoundException cannotFindFileAtPath) {
				System.out.println("Unable to locate data file with given name. Please try again.");
			}
		}

		int userSelection = -1;

		do {
			this.displayMenu();
			userSelection = this.getUserInt("Please make a selection: ");
			System.out.println();

			switch (userSelection) {
				case 1:
					this.runTextOption();
					break;
				case 2:
					this.runGraphicalOption();
					break;
				default:
					System.out.println("That is not a valid menu option. Please select a value in the menu.");
					break;
			}
		} while (userSelection != 1 && userSelection != 2);

		this.keyboardScanner.close();
	}

	/**
	 * Prompts the user for a file name and returns the input from the user.
	 * 
	 * @return user provided file name
	 */
	private String getFileName() {
		System.out.print("Please enter the name of the data file: ");
		return this.keyboardScanner.nextLine();
	}

	/**
	 * Creates a StockTUI using the StockManager model generated by the
	 * FileInteractor, and calls its run method.
	 */
	private void runTextOption() {
		StockTUI textualUserInterface = new StockTUI(this.stockManagerModel);
		textualUserInterface.run();
	}

	/**
	 * Creates a StockGUI with the StockManagerModel generated by the
	 * FileInteractor, and calls its launch method.
	 */
	private void runGraphicalOption() {
		StockGUI.setManager(this.stockManagerModel);
		StockGUI.launch(StockGUI.class);
	}

	/**
	 * Displays the available view version options for the application.
	 */
	private void displayMenu() {
		System.out.println("1 - Textual User Interface");
		System.out.println("2 - Graphical User Interface");
	}

	/**
	 * Prints the message to the console requesting user input, reads the user's
	 * input as a String, and attempts to convert the input into an integer. Repeats
	 * procedure until successful.
	 * 
	 * @param message - the request for input displayed to the user
	 * @return the user's input converted into an integer (once successful)
	 */
	private int getUserInt(String message) {
		int userInt = -1;

		boolean validInput = false;
		while (!validInput) {
			System.out.print(message);
			String userInput = this.keyboardScanner.nextLine();
			try {
				userInt = Integer.parseInt(userInput);
				validInput = true;
			} catch (NumberFormatException cannotParseInput) {
				System.out.println("Invalid input. Please enter valid integer value.");
			}
		}

		return userInt;
	}
}
